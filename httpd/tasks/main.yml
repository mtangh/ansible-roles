---
# tasks file for httpd

- name: httpd-main | Include OS/Distribution specific variables.
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
  - "{{ '%s-%s.yml'|format(os_spec_os_family,os_spec_os_distribution) }}"
  - "{{ '%s.yml'|format(os_spec_os_family) }}"
  - "default.yml"
  tags:
  - httpd
  - httpd-include-vars

- block:

  - name: "httpd-main | Set facts 'httpd_httpd_conf_directives' | in"
    set_fact:
      _httpd_httpd_conf_dvps_in: "{{ httpd_httpd_conf_directives|d({}) }}"
 
  - name: "httpd-main | Set facts 'httpd_httpd_conf_directives' | dict to list"
    include: "main_httpd-conf-dvps.yml"

  - name: "httpd-main | Set facts 'httpd_httpd_conf_directives' | out"
    set_fact:
      _httpd_directives_values: "{{ _httpd_httpd_conf_dvps_out|d([]) }}"
 
  when: httpd_httpd_conf_directives|d(none) is not none
  tags:
  - always
  - httpd-set-facts
  - httpd-set-facts-dvp-global

- block:

  - name: "httpd-main | Set facts 'httpd_httpd_ssl_directives' | in"
    set_fact:
      _httpd_httpd_conf_dvps_in: "{{ httpd_httpd_ssl_directives|d({}) }}"
 
  - name: "httpd-main | Set facts 'httpd_httpd_ssl_directives' | dict to list"
    include: "main_httpd-conf-dvps.yml"

  - name: "httpd-main | Set facts 'httpd_httpd_ssl_directives' | out"
    set_fact:
      _httpd_ssl_directives_values: "{{ _httpd_httpd_conf_dvps_out|d([]) }}"
 
  when: httpd_httpd_ssl_directives|d(none) is not none
  tags:
  - always
  - httpd-set-facts
  - httpd-set-facts-dvp-ssl

- name: httpd-main | Install the httpd.
  include: "{{ item }}"
  with_first_found:
  - "{{ '%s-%s.yml'|format(os_spec_os_family,os_spec_os_distribution) }}"
  - "{{ '%s.yml'|format(os_spec_os_family) }}"
  - "default.yml"
  tags:
  - httpd
  - httpd-install

- block:

  - name: "httpd-main | Stat '{{ httpd_httpd_conf_path|basename }}'"
    stat: path="{{ prefix_dir|d('') ~ httpd_httpd_conf_path }}"
    register: httpd_httpd_conf_file

  - name: "httpd-main | Stat '{{ httpd_httpd_conf_path|basename }}' origin"
    stat: path="{{ prefix_dir|d('') ~ httpd_httpd_conf_path }}.ORIG"
    register: httpd_httpd_conf_file_origin

  - name: "httpd-main | File '{{ httpd_httpd_conf_path|basename }}' Not Exist"
    fail: msg="'{{ prefix_dir|d('') ~ httpd_httpd_conf_path|basename }}' no such file or directory."
    when: httpd_httpd_conf_file.stat.exists|d(false) == false

  - name: "httpd-main | Backup '{{ httpd_httpd_conf_path|basename }}'"
    copy:
      src: "{{ prefix_dir|d('') ~ httpd_httpd_conf_path }}"
      dest: "{{ prefix_dir|d('') ~ httpd_httpd_conf_path }}.ORIG"
      remote_src: yes
    when: httpd_httpd_conf_file.stat.exists|d(false) == true
          and httpd_httpd_conf_file_origin.stat.exists|d(false) == false

  - name: "httpd-main | Set facts for '{{ httpd_httpd_conf_path|basename }}'"
    set_fact:
      __httpd_conf_path: "{{ httpd_httpd_conf_path }}"
      __httpd_dvps: "{{ _httpd_directives_values }}"
      __httpd_validate_command: "{{ httpd_httpd_conf_validate_command if test_run|d(false) == false else none }}"

  - name: "httpd-main | Configure '{{ httpd_httpd_conf_path|basename }}'"
    include: "main_configure.yml"

  tags:
  - httpd
  - httpd-conf

- block:

  - name: "httpd-main | Stat '{{ httpd_httpd_ssl_conf_path|basename }}'"
    stat: path="{{ prefix_dir|d('') ~ httpd_httpd_ssl_conf_path }}"
    register: httpd_httpd_ssl_conf_file

  - name: "httpd-main | Stat '{{ httpd_httpd_ssl_conf_path|basename }}' origin"
    stat: path="{{ prefix_dir|d('') ~ httpd_httpd_ssl_conf_path }}.ORIG"
    register: httpd_httpd_ssl_conf_file_origin

  - name: "httpd-main | File '{{ httpd_httpd_ssl_conf_path|basename }}' Not Exist"
    fail: msg="'{{ httpd_httpd_ssl_conf_path|basename }}' no such file or directory."
    when: httpd_httpd_ssl_conf_file.stat.exists|d(false)  == false

  - name: "httpd-main | Backup '{{ httpd_httpd_ssl_conf_path|basename }}'"
    copy:
      src: "{{ prefix_dir|d('') ~ httpd_httpd_ssl_conf_path }}"
      dest: "{{ prefix_dir|d('') ~ httpd_httpd_ssl_conf_path }}.ORIG"
      remote_src: yes
    when: httpd_httpd_ssl_conf_file.stat.exists|d(false)  == true
          and  httpd_httpd_ssl_conf_file_origin.stat.exist|d(false) == false

  - name: "httpd-main | Set facts for '{{ httpd_httpd_ssl_conf_path|basename }}'"
    set_fact:
      __httpd_conf_path: "{{ httpd_httpd_ssl_conf_path }}"
      __httpd_dvps: "{{ _httpd_ssl_directives_values }}"
      __httpd_validate_command: "{{ httpd_httpd_conf_validate_command if test_run|d(false) == false else none }}"

  - name: "httpd-main | Configure '{{ httpd_httpd_ssl_conf_path|basename }}'"
    include: "main_configure.yml"

  when: httpd_httpd_conf_path|d(none) is not none
  tags:
  - httpd
  - httpd-conf
  - httpd-conf-ssl

- block:

  - name: "httpd-main | Configure for OS:{{ os_spec_os_family|d('N/A') }}"
    include: "{{ item }}"
    with_first_found:
    - "{{ '%s-%s-configure.yml'|format(os_spec_os_family,os_spec_os_distribution) }}"
    - "{{ '%s-configure.yml'|format(os_spec_os_family) }}"
    - "default-configure.yml"

  tags:
  - httpd
  - httpd-conf
  - httpd-conf-os-family

- block:

  - name: "httpd-main | Handle service - Enabled '{{ httpd_httpd_service_enabled }}'"
    service:
      name: "{{ httpd_httpd_service_name }}"
      enabled: yes
    ignore_errors: true
    when: httpd_httpd_service_enabled|d(none)|bool == true

  - name: "httpd-main | Handle service - Initial state {{ httpd_httpd_initial_state|d('none') }}"
    service:
      name: "{{ httpd_httpd_service_name }}"
      state: "{{ httpd_httpd_startup_state }}"
    ignore_errors: true
    when: httpd_httpd_initial_state|d(none)|
          string|lower|trim|match('^(started|stoped)$')

  when: httpd_handle_service|d(true) == true
  tags:
  - httpd
  - httpd-service-setup

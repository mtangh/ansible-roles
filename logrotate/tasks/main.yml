---
# tasks file for logrotate
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

- name: "logrotate | Include OS/Distribution specific variables."
  include_vars: "{{ _include_vars_file }}"
  ignore_errors: yes
  with_first_found:
  - files:
    - "{{ 'vars/vars_%s-%s.yml'|format(
          ansible_os_family|d('*')|lower,
          ansible_distribution|d('*')|lower) }}"
    - "{{ 'vars/vars_%s.yml'|format(ansible_os_family|d('*')|lower) }}"
    - "vars/vars_default.yml"
    skip: yes
  loop_control:
    loop_var: _include_vars_file
  tags:
  - logrotate
  - logrotate-include-vars

- name: "logrotate | Install the logrotate."
  include: "{{ _include_tasks_file }}"
  with_first_found:
  - files:
    - "{{ 'tasks/tasks_%s-%s.yml'|format(
          ansible_os_family|d('*')|lower,
          ansible_distribution|d('*')|lower) }}"
    - "{{ 'tasks/tasks_%s.yml'|format(ansible_os_family|d('*')|lower) }}"
    - "tasks/tasks_default.yml"
    skip: yes
  loop_control:
    loop_var: _include_tasks_file
  tags:
  - logrotate
  - logrotate-install

- name: "logrotate | Updating logrotate configuration."
  template:
    src: "etc/logrotate.conf.j2"
    dest: "{{ '%s%s'|format(tests_prefix_dir|d(''),
              logrotate_conf_file|d('/etc/logrotate.conf')) }}"
    owner: "{{ tests_owner|d(logrotate_conf_file_owner|d('root')) }}"
    group: "{{ tests_group|d(logrotate_conf_file_group|d('root')) }}"
    mode: "{{ logrotate_conf_file_mode|d('0644') }}"
    backup: "{{ tests_run|d(false) == false }}"
  tags:
  - logrotate
  - logrotate-conf

- block:

  - name: "logrotate | Updating include files."
    include: logrotate-include-file.yml
    with_items: "{{ logrotate_logfiles|d([]) }}"
    loop_control:
      loop_var: logrotate_include_file
    when: logrotate_include_file.name|d(none) is not none
          and logrotate_include_file.logfiles|d(none) is not none
    tags:
    - logrotate
    - logrotate-include-files

  when: logrotate_include_dir|d(noney) is none
        or (logrotate_include_dir|string|lower)|
           match('^[ ]*(no|false)[ ]*$') == false
  tags:
  - logrotate
  - logrotate-include-files


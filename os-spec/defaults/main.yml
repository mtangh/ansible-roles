---
# defaults file for os-spec
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

# Meta data for this role.
os_spec_meta: |
    {{ lookup('file','./meta/main.yml')|from_yaml }}

# If necessary,
# define a default value with a variable name beginning with "os_spec_" here.

#
# os_spec:
#
#   RedHat: yes|no
#
#   Debian:
#     Ubuntu: yes|no
#
#   Darwin:
#     MacOSX: { ver_min: '10.7', ver_max: '10.11' }
#
# os_spec_ignore_errors: yes|no
#

os_spec_os_family: "{{
    ansible_os_family|trim|lower
    if ansible_os_family|d(none) is not none
    else none }}"
os_spec_os_distribution: "{{
    ansible_distribution|trim|lower
    if ansible_distribution|d(none) is not none
    else none }}"
os_spec_os_version: "{{
    ansible_distribution_version|string|trim
    if ansible_distribution_version|d(none) is not none
    else none }}"
os_spec_os_major_version: "{{
    ansible_distribution_major_version
    if ansible_distribution_major_version|d(none) is not none
    else (
      '%d'|format(
      ( ansible_distribution_version|regex_replace(
        '^([1-9][0-9]*)([.][0-9][0-9]*|).*','0\\1')|int )
      )|int
      if ansible_distribution_version|d(none) is not none
      and ansible_distribution_version|d('')|match(
        '^[1-9][0-9]*([.][0-9][0-9]*|).*')
      else none ) }}"

__os_family: "{{ os_spec_os_family|d('none') }}"

__os_dist: "{{ os_spec_os_distribution|d('none') }}"

__os_vers: |
  {%- set o = {} -%}
  {%- for _os_fam_k, _os_fam_v in (os_spec|d({})).iteritems()
          if _os_fam_k|string|trim|lower in ( __os_family, 'all' )
          and ( _os_fam_v|d(none) is mapping
             or _os_fam_v|d(none)|bool == true ) -%}
  {%    set _os_f_dict = {} %}
  {%    if _os_fam_k|string|trim|lower not in ( 'all' ) %}
  {%      set _os_f_dict = _os_fam_v
              if _os_fam_v is mapping else { __os_dist:_os_fam_v } %}
  {%      set _ = o.update({ 'min':none, 'max':none }) %}
  {%    elif ( o.min|d(none) is none and o.max|d(none) is none ) %}
  {%      set _ = o.update({ 'min':'0', 'max':'ZZZZ' }) %}
  {%    endif %}
  {%-   for _os_dist_k, _os_dist_v in (_os_f_dict|d({})).iteritems()
            if _os_fam_k|string|trim|lower not in ( 'all' )
            and _os_dist_k|string|trim|lower in ( __os_dist, 'all' )
            and ( _os_dist_v|d(none) is mapping
               or _os_dist_v|d(none)|bool == true ) -%}
  {%      if _os_dist_k|string|trim|lower not in ( 'all' )
          or ( o.min|d(none) is none and o.max|d(none) is none ) %}
  {%        set _os_ver_min = _os_dist_v.ver_min|string|trim
                if _os_dist_v.ver_min|d(none) is not none
                else '0' %}
  {%        set _os_ver_max = _os_dist_v.ver_max|string|trim
                if _os_dist_v.ver_max|d(none) is not none
                else 'ZZZZ' %}
  {%        set _ = o.update({ 'min':_os_ver_min, 'max':_os_ver_max }) %}
  {%      endif %}
  {%-   endfor -%}
  {%- endfor -%}
  {{ o }}


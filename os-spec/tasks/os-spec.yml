---
# os-spec.yml

- block:

  - name: "os-spec | Check the status of 'gather_facts'."
    fail:
      msg: "'gather_facts' is off, Turn on 'gather_facts' to use."
    when: ansible_os_family|d(none) is none
          and os_spec_os_family|d(none) is none
          and os_spec_os_distribution|d(none) is none
          and os_spec_os_version|d(none) is none
 
  - name: "os-spec | Set Facts - OS Spec."
    set_fact:
      os_spec_os_family: "{{
          ansible_os_family|trim|lower
          if ansible_os_family|d{none) is not none
          else none }}"
      os_spec_os_distribution: "{{
          ansible_distribution|trim|lower
          if ansible_distribution|d(none) is not none
          else none }}"
      os_spec_os_version: "{{
          ansible_distribution_version|string|trim
          if ansible_distribution_version|d(none) is not none
          else none }}"
      os_spec_os_major_version: "{{
          ansible_distribution_major_version
          if ansible_distribution_major_version|d(none) is not none
          else (
            '%d'|format(
            ( ansible_distribution_version|regex_replace(
              '^([1-9][0-9]*)([.][0-9][0-9]*|).*','0\\1')|int )
            )|int
            if ansible_distribution_version|d(none) is not none
            and ansible_distribution_version|d('')|match(
              '^[1-9][0-9]*([.][0-9][0-9]*|).*')
            else none ) }}"

    when: os_spec_os_family is undefined
          or os_spec_os_distribution is undefined
          or os_spec_os_version is undefined

  when: os_spec|d(none) is not none
  tags:
  - os-spec-verify

- block:

  - name: "os-spec | Check the OS and Version."
    fail:
      msg: |
        {{ 'Unsupported OS: %s-%s v%s; Not in cond[ %s ].'|format(
           os_spec_os_family,os_spec_os_distribution,os_spec_os_version|d('n/a'),
           (os_spec|d({})|string)) }}
    ignore_errors: "{{ os_spec_ignore_errors|d(false) }}"
    register: os_spec_supported
    when: ( os_spec_os_family|d(none) is not none
            and os_spec_os_distribution|d(none) is not none
            and ( __os_vars.min|d(none) is not none 
               or __os_vars.max|d(none) is not none ) )
          and
          ( ( __os_vars.min|d(none) is not none
              and os_spec_os_version|d('0.0')|
                  version_compare(__os_vars.min|d('0.0'),'<') )
            or
            ( __os_vars.max|d(none) is not none
              and os_spec_os_version|d('99999.999')|
                  version_compare(__os_vars.max|d('99999.999'),'>') ) )

  vars:
    __os_family: "{{ os_spec_os_family }}"
    __os_dist: "{{ os_spec_os_distribution }}"
    __os_vers: |
      {%  set o = {} %}
      {%- for _os_fam_k, _os_fam_v in (os_spec|d({})).iteritems()
              if _os_fam_k|string|trim|lower in ( __os_family, 'all' )
              and ( _os_fam_v|d(none) is mapping
                 or _os_fam_v|d(none)|bool == true ) -%}
      {%    set _os_f_dict = {} %}
      {%    if _os_fam_k|string|trim|lower not in ( 'all' ) %}
      {%      set _os_f_dict = _os_fam_v
                  if _os_fam_v is mapping else { __os_dist:_os_fam_v } %}
      {%      set _ = o.update({ 'min':none, 'max':none }) %}
      {%    elsif ( o.min|d(none) is none and o.max|d(none) is none ) %}
      {%      set _ = o.update({ 'min':'0', 'max':'ZZZZ' }) %}
      {%    endif %}
      {%-   for _os_dist_k, _os_dist_v in (_os_f_dict|d({})).iteritems()
                if _os_fam_k|string|trim|lower not in ( 'all' )
                and _os_dist_k|string|trim|lower in ( __os_dist, 'all' )
                and ( _os_dist_v|d(none) is mapping
                   or _os_dist_v|d(none)|bool == true ) -%} 
      {%      if _os_dist_k|string|trim|lower not in ( 'all' ) 
              or ( o.min|d(none) is none and o.max|d(none) is none ) %}
      {%        set _os_ver_min = _os_dist_v.ver_min|string|trim
                    if _os_dist_v.ver_min|d(none) is not none
                    else '0' %}
      {%        set _os_ver_max = _os_dist_v.ver_max|string|trim
                    if _os_dist_v.ver_max|d(none) is not none
                    else 'ZZZZ' %}
      {%        set _ = o.update({ 'min':_os_ver_min, 'max':_os_ver_max }) %}
      {%      endif %}
      {%-   endfor -%}
      {%- endfor -%}
      {{ o }}

  when: os_spec|d(none) is not none
        and os_spec_os_family|d(none) is not none
        and os_spec_os_distribution|d(none) is not none

  tags:
  - os-spec-verify

# rsyslog v3 config file
# {{ ansible_managed }}

# if you experience problems, check
# http://www.rsyslog.com/troubleshoot for assistance

#### MODULES ####
{%  if syslog_rsyslog_modules is defined 
    and syslog_rsyslog_modules is not none
    and syslog_rsyslog_modules is iterable %}
{%    for items in syslog_rsyslog_modules %}
{%      set it_m,it_c,it_e = (none,none,true) %}
{%      for k,v in items.iteritems() if items is not none %}
{%        if k|lower == 'comment' %}
{%          set it_c = v.split('\n') if v is not none else none %}
{%        elif k|lower == 'enabled' %}
{%          set it_e = true if v|bool else false %}
{%        elif it_m is none and v is none %}
{%          set it_m = k|trim %}
{%        endif %}
{%      endfor %}
{%      if it_c is not none and it_c is iterable %}
{%        for c in it_c if c is not none %}
{{ '# %s'|format(c)|trim }}
{%        endfor %}
{%      endif %}
{%      if it_e == false %}{{ '#' }}{% endif -%}
$ModLoad  {{ it_m|trim }}
{%    endfor %}
{%  endif %}

#### GLOBAL DIRECTIVES ####
{%  if syslog_rsyslog_directives is defined
    and syslog_rsyslog_directives is not none
    and syslog_rsyslog_directives is iterable %}
{%    for items in syslog_rsyslog_directives %}
{%      set it_k,it_v,it_c,it_e = (none,none,none,true) %}
{%      for k,v in items.iteritems() if items is not none %}
{%        if k|lower == 'comment' %}
{%          set it_c = v.split('\n') if v is not none else none %}
{%        elif k|lower == 'enabled' %}
{%          set it_e = true if v|bool else false %}
{%        elif it_k is none %}
{%          set it_k,it_v = (k|trim,v|trim) %}
{%        endif %}
{%      endfor %}
{%      if it_c is not none and it_c is iterable %}
{%        for c in it_c if c is not none %}
{{ '# %s'|format(c)|trim }}
{%        endfor %}
{%      endif %}
{{ '%s%s %s'|format(('' if it_e else '#'),it_k,it_v)|trim }}
{%    endfor %}
{%  endif %}

#### RULES ####
{%  if syslog_conf_rules is defined
    and syslog_conf_rules is not none
    and syslog_conf_rules is iterable %}
{%    for items in syslog_conf_rules
          if items is not none
          and (items.selectors is defined and items.selectors is not none)
          and (items.destination is defined and items.destination is not none) %}

{%      set it_s = [ items.selectors|trim ]
            if items.selectors is string else items.selectors %}
{%      set it_d = items.destination|trim %}
{%      set it_c = items.comment.split('\n') 
            if items.comment is defined and items.comment is not none else none %}
{%      set it_e = items.enabled|bool
            if items.enabled is defined else true %}
{%      if it_c is not none and it_c is iterable %}
{%        for c in it_c if c is not none %}
{{ '# %s'|format(c)|trim }}
{%        endfor %}
{%      endif %}
{%      if it_s|join(';')|trim|length <= 38 %}
{{ '%s%-40s%s'|format(('' if it_e else '# '),(it_s|join(';')|trim),it_d|trim) }}
{%      else %}
{{ '%s%s'|format(('' if it_e else '#'),(it_s|join(';')|trim)) }} \
{{ '%s%40s%s'|format(('' if it_e else '#'),'',it_d|trim) }}
{%      endif %}
{%    endfor %}
{%  endif %}

# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this rule. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
{%  if syslog_rsyslog_queue_settings is defined
    and syslog_rsyslog_queue_settings is not none
    and syslog_rsyslog_queue_settings is iterable %}
{%    for items in syslog_rsyslog_queue_settings %}
{%      set it_k,it_v,it_c,it_e = (none,none,none,true) %}
{%      for k,v in items.iteritems() if items is not none %}
{%        if k|lower == 'comment' %}
{%          set it_c = v.split('\n') if v is not none else none %}
{%        elif k|lower == 'enabled' %}
{%          set it_e = true if v|bool else false %}
{%        elif it_k is none %}
{%          set it_k,it_v = (k|trim,v|trim) %}
{%        endif %}
{%      endfor %}
{%      if it_c is not none and it_c is iterable %}
{%        for c in it_c if c is not none %}
{{ '# %s'|format(c)|trim }}
{%        endfor %}
{%      endif %}
{{ '%s%s %s'|format(('' if it_e else '#'),it_k,it_v)|trim }}
{%    endfor %}
{%  endif %}
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
{%  if syslog_rsyslog_forwarding_rules is defined
    and syslog_rsyslog_forwarding_rules is not none
    and syslog_rsyslog_forwarding_rules is iterable %}
{%    for items in syslog_rsyslog_forwarding_rules
          if items is not none
          and (items.selectors is defined and items.selectors is not none)
          and (items.destination is defined and items.destination is not none) %}

{%      set it_s = [ items.selectors|trim ]
            if items.selectors is string else items.selectors %}
{%      set it_d = items.destination|trim %}
{%      set it_c = items.comment.split('\n') 
            if items.comment is defined and items.comment is not none else none %}
{%      set it_e = items.enabled|bool
            if items.enabled is defined else true %}
{%      if it_c is not none and it_c is iterable %}
{%        for c in it_c if c is not none %}
{{ '# %s'|format(c)|trim }}
{%        endfor %}
{%      endif %}
{%      if it_s|join(';')|trim|length <= 38 %}
{{ '%s%-40s%s'|format(('' if it_e else '# '),(it_s|join(';')|trim),it_d|trim) }}
{%      else %}
{{ '%s%s'|format(('' if it_e else '#'),(it_s|join(';')|trim)) }} \
{{ '%s%40s%s'|format(('' if it_e else '#'),'',it_d|trim) }}
{%      endif %}
{%    endfor %}
{%  endif %}
# ### end of the forwarding rule ###

# SUDOers
# {{ ansible_managed }}
# Do NOT modify this file directly.

# sudoers file.
#
# This file MUST be edited with the 'visudo' command as root.
# Failure to use 'visudo' may result in syntax or file permission errors
# that prevent sudo from running.
#
# See the sudoers man page for the details on how to write a sudoers file.
#

## Host Aliases
## Groups of machines. You may prefer to use hostnames (perhaps using
## wildcards for entire domains) or IP addresses instead.
# Host_Alias     FILESERVERS = fs1, fs2
# Host_Alias     MAILSERVERS = smtp, smtp2
{%  if sudo_sudoers_host_alias|d(none) is not none %}
{%  for e in sudo_sudoers_host_alias|d([])
        if e|d('')|string|length > 0 %}
{%    set alias = '%s = %s'|format(e.name,e.value|d(''))
          if e.name is defined else e|string|trim %}
{%    set cmnts = e.comment
          if e.comment|d(none) is not none
          and e.comment is iterable and e.comment is not string
          else ([e.comment|trim] if e.comment|d(none) is string else []) %}
{%    for c in (cmnts|d([])) if c|length > 0 %}
{{ '# %s'|format(c)|trim }}
{%    endfor %}
Host_Alias  {{ alias }}
{%  endfor %}
{%  endif %}

## User Aliases
## These aren't often necessary, as you can use regular groups
## (ie, from files, LDAP, NIS, etc) in this file - just use %groupname
## rather than USERALIAS
# User_Alias ADMINS = jsmith, mikem
{%  if sudo_sudoers_user_alias|d(none) is not none %}
{%  for e in sudo_sudoers_user_alias|d([])
        if e|d('')|string|length > 0 %}
{%    set alias = '%s = %s'|format(e.name,e.value|d(''))
          if e.name is defined else e|string|trim %}
{%    set cmnts = e.comment
          if e.comment|d(none) is not none
          and e.comment is iterable and e.comment is not string
          else ([e.comment|trim] if e.comment|d(none) is string else []) %}
{%    for c in (cmnts|d([])) if c|length > 0 %}
{{ '# %s'|format(c)|trim }}
{%    endfor %}
User_Alias  {{ alias }}
{%  endfor %}
{%  endif %}

## Runas Aliases
{%  if sudo_sudoers_runas_alias|d(none) is not none %}
{%  for e in sudo_sudoers_runas_alias|d([])
        if e|d('')|string|length > 0 %}
{%    set alias = '%s = %s'|format(e.name,e.value|d(''))
          if e.name is defined else e|string|trim %}
{%    set cmnts = e.comment
          if e.comment|d(none) is not none
          and e.comment is iterable and e.comment is not string
          else ([e.comment|trim] if e.comment|d(none) is string else []) %}
{%    for c in (cmnts|d([])) if c|length > 0 %}
{{ '# %s'|format(c)|trim }}
{%    endfor %}
Runas_Alias {{ alias }}
{%  endfor %}
{%  endif %}

## Command Aliases
## These are groups of related commands...
#- Networking
# Cmnd_Alias NETWORKING = /sbin/route, /sbin/ifconfig, /bin/ping, /sbin/iptables
#- Installation and management of software
# Cmnd_Alias SOFTWARE = /bin/rpm, /usr/bin/up2date, /usr/bin/yum
#- Services
# Cmnd_Alias SERVICES = /sbin/service, /sbin/chkconfig
#- Updating the locate database
# Cmnd_Alias LOCATE = /usr/bin/updatedb
#- Storage
# Cmnd_Alias STORAGE = /sbin/fdisk, /bin/mount, /bin/umount
#- Delegating permissions
# Cmnd_Alias DELEGATING = /usr/sbin/visudo, /bin/chown, /bin/chmod, /bin/chgrp
#- Processes
# Cmnd_Alias PROCESSES = /bin/nice, /bin/kill, /usr/bin/kill, /usr/bin/killall
#- Drivers
# Cmnd_Alias DRIVERS = /sbin/modprobe
#
{%  if sudo_sudoers_cmnd_alias|d(none) is not none %}
{%  for e in sudo_sudoers_cmnd_alias|d([])
        if e|d('')|string|length > 0 %}
{%    set alias = '%s = %s'|format(e.name,e.value|d(''))
          if e.name is defined else e|string|trim %}
{%    set cmnts = e.comment
          if e.comment|d(none) is not none
          and e.comment is iterable and e.comment is not string
          else ([e.comment|trim] if e.comment|d(none) is string else []) %}
{%    for c in (cmnts|d([])) if c|length > 0 %}
{{ '# %s'|format(c)|trim }}
{%    endfor %}
Cmnd_Alias  {{ alias }}
{%  endfor %}
{%  endif %}

# Defaults specification
{%  if sudo_sudoers_defaults|d(none) is not none %}
{%  for e in sudo_sudoers_defaults|d([])
        if e|d(none) is not none %}
{%    set dflts = e.default
          if e.default|d(none) is not none
          and e.default is iterable and e.default is not string
          else ([e.default|trim] if e.default|d(none) is string
          else ([e|trim] if e|d(none) is string else '')) %}
{%    set cmnts = e.comment
          if e.comment|d(none) is not none
          and e.comment is iterable and e.comment is not string
          else (e.comment|list('\n') if e.comment|d(none) is string else []) %}
{%    for c in (cmnts|d([])) if c|length > 0 %}
{{ '# %s'|format(c)|trim }}
{%    endfor %}
{%    for dv in dflts|d([]) if dflts|d(none) is not none and dv|length > 0 %}
Defaults    {{ dv|trim }}
{%    endfor %}
{%  endfor %}
{%  endif %}

## User privilege specification
root            ALL=(ALL) ALL
##
## Uncomment to allow people in group wheel to run all commands
# %wheel          ALL=(ALL) ALL
#
## Same thing without a password
# %wheel          ALL=(ALL) NOPASSWD: ALL
#
## Samples
# %users          ALL=/sbin/mount /cdrom,/sbin/umount /cdrom
# %users          localhost=/sbin/shutdown -h now
#
{%  if sudo_sudoers_rules|d(none) is not none %}
{%  for rule in sudo_sudoers_rules|d([])
        if rule is not none %}
{%    set r = {
        'u': rule.users|trim,
        'h': (rule.hosts   if rule.hosts|d(none) is not none else 'ALL'),
        'ra':(rule.runas   if rule.runas|d(none) is not none else 'ALL'),
        'np':('NOPASSWD: ' if rule.nopasswd is defined and rule.nopasswd|bool
                           else '') } %}
{%    set r_cmd = rule.commands|join(', ')
        if rule.commands|d(none) is not none
        and (rule.commands is iterable and rule.commands is not string)
        else (rule.commands|trim
              if rule.commands|d(none) is string else 'ALL') %}
{%    set r_cmnts = rule.comment
        if rule.comment|d(none) is not none
        and (rule.comment is iterable and rule.comment is not string)
        else ([rule.comment|trim]
              if rule.comment|d(none) is string else []) %}
{%    for c in (cmnts|d([])) if c|length > 0 %}
{{ '# %s'|format(c)|trim }}
{%    endfor %}
{{ '%-15s %s=(%s) %s%s'|format(r.u,r.h,r.ra,r.np,r_cmd)|trim }}
{%  endfor %}
{%  endif %}

{%  if sudo_sudoers_dropin_enabled|d(false) == false %}
## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
{%  if sudo_sudoers_dropin_dir|d(none) is none %}#{% endif -%}
includedir {{ sudo_sudoers_dropin_dir|d('/etc/sudoers.d') }}
{%  endif %}

